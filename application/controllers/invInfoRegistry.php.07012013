<?php

	//class Login extends CI_Controller {	
	class InvInfoRegistry extends MY_Controller {	
		//base Setting
		var $tableName = array();
		var $project = array();
		var $employee = array();
		
		public function __construct()
		{
			parent::__construct();//繼承父類別的涵數
			$this->_load();
		}
		
		public function index ($menuID){
			//建構基本參數設定
			$this->_load();
			//載入基本套件、設定頁面基本資訊
			$this->lang->load('main',$this->session->userdata('lang'));//戴入語言套件
			$data['loginInfo'] = $this->session->all_userdata();
			$data['tableName'] = $this->tableName;
			$view = "invInfoRegistry";
			
			//取得功能資訊
			$sString = "SELECT a.*,b.name as parentName,b.menuTypeID as parentID FROM menu as a INNER JOIN menuType as b ";
			$sString .= "WHERE a.menuID = '%s' and b.menuTypeID = a.parentID";
			$sqlString = sprintf($sString,$menuID);
			//echo $sqlString;//驗證SQL碼
			
			$menuSql = $this->db->query($sqlString);
			
			$menuInfo = array();
			foreach($menuSql->result() as $key => $val){
				$menuInfo['menuName'] = $val->name;
				$menuInfo['parent'] = $val->parentName;
				$menuInfo['parentID'] = $val->parentID;
				$menuInfo['link'] = $val->link;
				$menuInfo['menuID'] = $menuID;
			}
			$data['menuInfo'] = $menuInfo;
			//var_dump($menuInfo);
			//定義左側標籤何者開啟
			foreach($this->session->userdata('menuType') as $key => $val){
				if($menuInfo['parentID'] == $val['id']){
					$active = $key;
				};
			}
			$data['active'] = $active;
			//var_dump($data);//驗證輸出陣列
			//取得請購單Purchase Request 資料
			$sqlString = "SELECT * FROM purchaseRequest";
			$prSql = $this->db->query($sqlString);
			$prNo = array();
			
			foreach($prSql->result() as $key => $val){
				$subArray = array();
				$subArray['id'] = $val->purchaseRequestID;
				$subArray['No'] = $val->purchaseRequestNo;
				$prNo[$val->purchaseRequestID] = $subArray;
			}
			$data['prNo'] = $prNo;
			$data['project'] = $this->project;//輸出專案陣列
			$data['employee'] = $this->employee;//輸出成員陣列
			$data['invInfoRegistry'] = $this->checkPermission('3','invInfoRegistry');
			
			//var_dump($data);
			
			$this->load->view('header',$data);
			$this->load->view('nav',$data);
			$this->load->view($view,$data);
			$this->load->view('footer',$data);
		}
		
		public function sendWarehouseData(){
		//取得服務資料
		$infoData = array();
		$table = $this->tableName['mainTable'];
		$tableID = $table."ID";
		$sqlString = "SELECT a.*,b.emplyoeeNo,b.nameFirst,b.nameLast,b.Gender FROM %s as a inner join employee as b WHERE a.	warehouseManagerID = b.employeeID ORDER BY %s ASC";
		//echo sprintf($sqlString,$table,$tableID);
		$infoData['tableName'] = $table;
		$infoData['baseSql'] = sprintf($sqlString,$table,$tableID);
		$infoData['numLimit'] = 20;
		$infoData['page'] = $this->input->get('page') == ""?1:$this->input->get('page');
		$infoData['column'] = array(
			"name"
			,"status"
			,"emplyoeeNo"
			,"nameFirst"
			,"nameLast"
			,"Gender"
			,"mail"
			,"phone"
		);
		
		
		$result = $this->returnGridData($infoData);
		//var_dump($result);
		echo json_encode($result);
		}
		
		//取得Needs Restocking跟Inventory Level的資料
		public function inventoryCondition($type='0',$warehouseID){
			//取得服務資料
			$infoData = array();
			$table = $this->tableName['linkTable']['itemInventory'];
			$tableID = $table."ID";
			$sqlString = "SELECT a.*,b.* FROM %s AS a INNER JOIN item AS b WHERE a.itemID=b.itemID AND a.warehouseID='%s' AND b.type!='2'";
			
			if($type == '1'){
				$query =  $this->db->query(sprintf($sqlString,$table,$warehouseID));
				$result = $query->result();
				//var_dump($result);
				$need = array();
				foreach($result as $key=>$val){
					$onOrder = $this->getOnOrder($val->itemID,$val->warehouseID);
					if($onOrder['num'] != 0){
						$currentLevel = $onOrder['orderNum']->onOrder + $val->onHand;
					}else{
						$currentLevel = $val->onHand;
					}
					if($currentLevel < $val->minimumLevel){
						array_push($need,$val->itemInventoryID);
					}
				}
				//var_dump($need);
				$needString = "";
				foreach($need as $key=>$val){
					$needString .= $val;
					if($key < count($need)-1 && count($need) != 1){
						$needString .=",";
					}
				}
				//echo $needString;
				if($needString != ""){
					$sqlString .= "AND itemInventoryID IN(".$needString.")";
				}else{
					$sqlString .= "AND 1 = 0";
				}
			}
			$infoData['tableName'] = $table;
			$infoData['baseSql'] = sprintf($sqlString,$table,$warehouseID);
			$infoData['numLimit'] = 20;
			$infoData['page'] = $this->input->get('page') == ""?1:$this->input->get('page');
			$infoData['column'] = array(
				"code","name","description","onHand","allocated",
				"avalliable","onOrder","currentLevel","minimumLevel","location"
			);
			
			$result = $this->returnGridData($infoData);
			//var_dump($result);
			echo json_encode($result);
		}
		
		//查詢倉庫工具資料並回傳
		public function getInventoryTool($id){
			//取得服務資料
			$infoData = array();
			$table = $this->tableName['linkTable']['item'];
			$tableID = $table."ID";
			$sqlString = "SELECT * FROM %s WHERE type='3' AND warehouseID='%s'";
			//echo sprintf($sqlString,$table,$id);
			$infoData['tableName'] = $table;
			$infoData['baseSql'] = sprintf($sqlString,$table,$id);
			$infoData['numLimit'] = 20;
			$infoData['page'] = $this->input->get('page') == ""?1:$this->input->get('page');
			$infoData['column'] = array(
				"code"
				,"name"
				,"description"
				,"usage"
				,"purchasedDate"
				,"unitCost"
				,"warrantyPeriod"
				,"calibrationPeriod"
				,"usefulLife"
				,"disposalMethod"
			);
			
			$result = $this->returnGridData($infoData);
			//var_dump($result);
			echo json_encode($result);
		}
		
		//回傳Grid資料
		public function returnGridData($infoData){
			//定義基本變數
			$page = $infoData['page'];
			$numLimit = $infoData['numLimit'];
			$startRow = $page*$numLimit-$numLimit;
			$tableName = $infoData['tableName'];
			$targetID = $tableName."ID";
			
			//產生mySql查詢結果
			$baseSql = $infoData['baseSql'];
			//計算總筆數
			$rowNum = $this->db->query($baseSql);
			$infoNum = isset($rowNum->num_rows)?$rowNum->num_rows:0;
			//封裝查詢結果
			$sqlString = sprintf($baseSql." Limit %s,%s",$startRow,$numLimit);
			$query = $this->db->query($sqlString);
			$reInfoData = array();
			//封裝查詢結果
			//var_dump($query->result());
			foreach($query->result() as $row){
				$menuTypeData = array();
				foreach($infoData['column'] as $val){
					
					$result = "";
					switch($val){
						case "Gender":
							$result = $row->$val == '0'?"Female":"Male";
						break;
						case "status":
							$result = $row->$val == '1'?"Active":"Closed Down";
						break;
						case "allocated":
						
							$result = "";
						break;
						case "avalliable":
							$result = "";
						break;
						case "onOrder":
							$onOrder = $this->getOnOrder($row->itemID,$row->warehouseID);
							if($onOrder['num'] != 0){
								$onOrderNum = $onOrder['orderNum']->onOrder;
							}else{
								$onOrderNum = '0';
							}
							$result = $onOrderNum;
						break;
						case "currentLevel":
							$onOrder = $this->getOnOrder($row->itemID,$row->warehouseID);
							if($onOrder['num'] != 0){
								$onOrderNum = $onOrder['orderNum']->onOrder;
							}else{
								$onOrderNum = 0;
							}
							$result = $row->onHand + $onOrderNum;
						break;
						case "warehouseID":
							$sqlString = "SELECT * FROM warehouse WHERE warehouseID='%s'";
							$query = $this->db->query(sprintf($sqlString,$row->$val));
							$warehouseResult = $query->row();
							if($query->num_rows() > 0){
								$result = $warehouseResult->name;
							}
						break;
						default:
							$result = $row->$val;
						break;
					}
					$result = $result == '0'?"":$result;
					array_push($menuTypeData,$result);
				}
				
				$reInfoData[] = array(
					"id" => $row->$targetID
					,"cell" => $menuTypeData
				);
			}			
			$result = array(
				'records'=>count($reInfoData),
				'total'=>ceil($infoNum/$numLimit),
				'page'=>$page,
				'rows'=>$reInfoData
			);
			
			//包json編碼後傳送
			return $result;
		}
		
		//取得項目下訂數
		private function getOnOrder($itemID,$warehouseID){
			$sqlString = "SELECT SUM(qty) AS onOrder FROM purchaseDetail WHERE itemID='%s' AND purchaseRequestID IN(SELECT purchaseRequestID FROM purchaseRequest WHERE projectID=(SELECT projectID FROM warehouse WHERE warehouseID='%s') AND status!='1' AND inventoryPost != '1')";
			$query = $this->db->query(sprintf($sqlString,$itemID,$warehouseID));
			$result['num'] = $query->num_rows();
			if($query->num_rows() > 0){
				$result['orderNum'] = $query->row();
			}
			//echo sprintf($sqlString,$itemID,$warehouseID);
			return $result;
		}
		
		//查詢項目資料並回傳
		public function getFunctionData($tableName=""){
			//echo $tableName;
			if($tableName == ""){
				$table = "warehouse";
			}else{
				$table = $tableName;
			};
			//echo $table;
			$tableID = $table."ID";
			switch($table){
				case "item":
					$sqlString = "SELECT * FROM %s WHERE %s='%s'";
				break;
				case "warehouse":
				default:
					$sqlString = "SELECT a.*,b.emplyoeeNo,b.nameFirst,b.nameLast,b.Gender,b.position FROM %s as a inner join employee as b WHERE %s ='%s' and a.warehouseManagerID = b.employeeID";
				break;
			}
			/*$sqlString = "SELECT a.*,b.emplyoeeNo,b.nameFirst,b.nameLast,b.Gender,b.position FROM %s as a inner join employee as b WHERE %s ='%s' and a.warehouseManagerID = b.employeeID";
			//echo sprintf($sqlString,$table,$tableID,$this->input->post('ID'));*/
			$row = $this->db->query(sprintf($sqlString,$table,$tableID,$this->input->post('ID')));
			$result = $row->row_array();
			if($table == 'warehouse'){
				if($result['managerImg'] == ''){
					$result['managerImg'] = base_url()."images/unknown-person.jpg";
				}else{
					$result['managerImg'] = base_url()."upload/".$result['managerImg'];
				}
			};
			if($table =='item'){
				if($result['attachment'] == ''){
					$result['attachment'] = base_url()."images/unknown-person.jpg";
				}else{
					$result['attachment'] = base_url()."upload/".$result['attachment'];
				}	
			}
			echo json_encode($result);
			//$this->session->set_userdata('thisAjaxPost',$this->input->post());//驗證post資料
			//$this->session->set_userdata('thisAjaxQuery',$result);//驗證Query資料
		}
		
				//取得成員資料
		public function getEmployeeData(){
			$id = $this->input->post('ID');
			$result = array();
			$sqlString = sprintf("SELECT * FROM employee WHERE employeeID='%s'",$id);
			//echo $sqlString;
			$query = $this->db->query($sqlString);
			foreach($query->result() as $key => $val){
				$result['gender'] = $val->Gender == "1"?"Male":"Female";
				$result['position'] = $val->position;
			}
			echo json_encode($result);
		}
		
		//資料庫操作
		public function modify($tar=''){
			//檔案上傳
			$config['upload_path'] = './upload/';
			$config['allowed_types'] = 'gif|jpg|png';
			$config['encrypt_name'] = 'true';
			//echo $tar;
			$this->load->library('upload',$config);
			$file_name = $tar == "item"?"attachment":"managerImg";			
			
			$this->upload->do_upload($file_name);
			$uploadData = $this->upload->data();
			
			//echo "this is post page";
			if($tar == ''){
				$tar = $this->tableName['mainTable'];
			}
			//載入資料寫入模組
			$this->load->model("modify");
			//取得表單傳入資料
			$post = $this->input->post();												
			 						 
			if($uploadData['file_name'] != ''){
				$post[$file_name] = $uploadData['file_name'];
			}
			else{				
				if($post['oper']=='edit'){
					$table = ($file_name=='managerImg')?'warehouse':'item';					
					$tableID = $table."ID";					
					$id = $this->input->post('id');
					$sqlString = sprintf("SELECT * FROM ".$table." WHERE ".$tableID."='%s'",$id);
					//echo $sqlString;
					$query = $this->db->query($sqlString);					
					$tmp = $query->row();
					$post[$file_name]=$tmp->$file_name;
				}
			}					
			
			$post['managerID'] = $this->session->userdata('employeeID');			
			$target = $tar;
			
			//var_dump($post);
			
			//驗證傳入資料
			$_sesResult = array("result"=>$this->input->post(),"table"=>$tar);
			$this->session->set_userdata($_sesResult);
			//寫入資料庫
			$this->modify->modify($target,$post);			
		}
		
		//顯示傳入資料
		public function echoPost(){
			var_dump($this->session->all_userdata());
		}
		
		//設定程式基本參數
		private function _load(){
			$tableName = array();
			$tableName['mainTable'] = "warehouse";
			$tableName['linkTable'] = array(
				'supplier' => 'purchaseReqeust'
				,'itemInventory' => 'itemInventory'
				,'item' => 'item'
			);
			
			//取得專案資料
			$project = array();
			$sqlString = "SELECT * FROM project WHERE status != 2";
			$query = $this->db->query($sqlString);
			$result = $query->result();
			foreach($result as $key => $val){
				$project[$val->projectID] = $val->name;
			}
			
			//取得成員資料
			$employee = array();
			$sqlString = "SELECT * FROM employee WHERE enable=1";
			$query = $this->db->query($sqlString);
			$result = $query->result();
			foreach($result as $key => $val){
				$employee[$val->employeeID] = $val->nameFirst.$val->nameLast;
			}
			
			$this->tableName = $tableName;
			$this->project = $project;
			$this->employee = $employee;
		}
	}